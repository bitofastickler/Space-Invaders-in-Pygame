
import pygame
import random
import math
from pygame import mixer

# initialize pygame
pygame.init()

# create the screen
screen = pygame.display.set_mode((800, 600))

# background
background = pygame.image.load('spaceBackground.png')

# background music
mixer.music.load('spaceInvadersMusic.mp3')
mixer.music.play(-1)

# title and icon
pygame.display.set_caption("SPACE BOOM")
icon = pygame.image.load('spaceshipB.png')
pygame.display.set_icon(icon)

#  Player
playerImg = pygame.image.load('spaceshipB.png')
playerX = 370
playerY = 480
playerX_change = 0

# Enemy

enemyImg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
num_of_enemies = 6

for i in range(num_of_enemies):
    enemyImg.append(pygame.image.load('alienC.png'))
    enemyX.append(random.randint(0, 768))
    enemyY.append(random.randint(50, 150))
    enemyX_change.append(2)
    enemyY_change.append(40)

#  Laser ready state - you can't see the laser on the screen
#  fire - the laser is currently moving
laserImg = pygame.image.load('laser.png')
laserX = 0
laserY = 480
laserX_change = 0
laserY_change = 10
laser_state = "ready"

# Score

score_value = 0
font = pygame.font.Font('freesansbold.ttf', 32)

textX = 10
textY = 10

# Game Over Text
over_font = pygame.font.Font('freesansbold.ttf', 64)
def show_score(x, y):
    score = font.render("Score : " + str(score_value), True, (255, 255, 255))
    screen.blit(score, (x, y))

def game_over_text():
    over_text = over_font.render("GAME OVER", True, (255, 255, 255))
    screen.blit(over_text, (200, 250))


def player(x, y):
    screen.blit(playerImg, (x, y))


def enemy(x, y, i):
    screen.blit(enemyImg[i], (x, y))


def fireLaser(x, y):
    global laser_state
    laser_state = "fire"
    screen.blit(laserImg, (x + 16, y + 10))


# uses formula for distance between two points
def isCollision(enemyX, enemyY, laserX, laserY):
    distance = math.sqrt((math.pow(enemyX - laserX, 2)) + (math.pow(enemyY - laserY, 2)))
    if distance < 27:
        return True
    else:
        return False


# game loop
running = True
while running:

    #  RGB - Red, Green, Blue ... screen should always be at the top
    screen.fill((119, 65, 197))
    #  background image
    screen.blit(background, (0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        # Check Keystroke
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_a:
                playerX_change = -3.5
            if event.key == pygame.K_d:
                playerX_change = 3.5
            if event.key == pygame.K_SPACE:
                if laser_state is "ready":
                    laser_Sound = mixer.Sound('LaserZap.wav')
                    laser_Sound.play()
                    # get the current x coordinate of the ship
                    laserX = playerX
                    fireLaser(laserX, laserY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_a or event.key == pygame.K_d:
                playerX_change = 0

    # player must come after screen or it will be loaded underneath
    # 5 = 5 + -0.1 -> 5 = 5 - 0.1
    
    playerX += playerX_change
    # Bounds player icon, 768 = 800 - size of icon
    if playerX <= 0:
        playerX = 0
    elif playerX >= 768:
        playerX = 768

    # Enemy movement / boundaries icon, 768 = 800 - size of icon
    for i in range(num_of_enemies):

        # Game Over
        if enemyY[i] > 440:
            for j in range(num_of_enemies):
                enemyY[j] = 2000
            game_over_text()
            break

        enemyX[i] += enemyX_change[i]
        if enemyX[i] <= 0:
            enemyX_change[i] = 2
            enemyY[i] += enemyY_change[i]
        elif enemyX[i] >= 768:
            enemyX_change[i] = -2
            enemyY[i] += enemyY_change[i]

        # Collision
        
        collision = isCollision(enemyX[i], enemyY[i], laserX, laserY)
        if collision:
            alienDeath_Sound = mixer.Sound('alienDeath.wav')
            alienDeath_Sound.play()
            laserY = 480
            laser_state = "ready"
            score_value += 1
            enemyX[i] = random.randint(0, 735)
            enemyY[i] = random.randint(50, 150)

        enemy(enemyX[i], enemyY[i], i)

    #  Laser Movement
    
    if laserY <= 0:
        laserY = 480
        laser_state = "ready"

    if laser_state is "fire":
        fireLaser(laserX, laserY)
        laserY -= laserY_change

    player(playerX, playerY)
    show_score(textX, textY)
    pygame.display.update()
